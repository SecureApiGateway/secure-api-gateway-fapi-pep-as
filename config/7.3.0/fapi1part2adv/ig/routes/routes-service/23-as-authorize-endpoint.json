{
  "name": "23 - Authorize endpoint",
  "comment": "Ensure FAPI compliant authorize requests",
  "baseURI": "https://&{identity.platform.fqdn}",
  "condition": "${find(request.uri.path, '^/am/oauth2/realms/root/realms/&{am.realm}/authorize')}",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "comment": "FAPI Authorize Filter Chain",
          "name": "fapiAuthorizeFilterChain",
          "type": "FapiAuthorizeFilterChain",
          "config": {
            "auditService" : "fapiAuditService",
            "forwardedHost" : "&{as.fqdn}"
          }
        },
        {
          "name": "FapiAuthorizeRequestValidationFilter",
          "type": "FapiAuthorizeRequestValidationFilter",
          "comment": "Ensure authorize request object is FAPI compliant"
        },
        {
          "name": "ErrorResponseFilter",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ErrorResponseFilter.groovy"
          }
        },
        {
          "name": "AuthorizeResponseFetchApiClientFilter",
          "type": "AuthorizeResponseFetchApiClientFilter",
          "comment": "Add ApiClient data to the context attributes",
          "config": {
            "apiClientService": "IdmApiClientService"
          }
        },
        {
          "name": "AuthorizeResponseJwtReSignFilter",
          "type": "AuthorizeResponseJwtReSignFilter",
          "comment": "Re-sign the authorize response data (id_token and/or JARM response) returned by AM to fix OB keyId issue",
          "config": {
            "jwtReSigner": "ObJwtReSigner"
          }
        }
      ],
      "handler": "FRReverseProxyHandler"
    }
  }
}